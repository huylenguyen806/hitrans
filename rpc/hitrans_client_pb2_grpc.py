# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hitrans_client_pb2 as hitrans__client__pb2


class Hitrans_ClientStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.PopUp = channel.unary_unary(
            '/hitrans_client.Hitrans_Client/PopUp',
            request_serializer=hitrans__client__pb2.PopData.SerializeToString,
            response_deserializer=hitrans__client__pb2.Empty.FromString,
        )


class Hitrans_ClientServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def PopUp(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Hitrans_ClientServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'PopUp': grpc.unary_unary_rpc_method_handler(
            servicer.PopUp,
            request_deserializer=hitrans__client__pb2.PopData.FromString,
            response_serializer=hitrans__client__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'hitrans_client.Hitrans_Client', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
